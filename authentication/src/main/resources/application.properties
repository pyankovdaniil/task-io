# application parameters
server.port=${AUTHENTICATION_SERVER_PORT}
spring.application.name=${AUTHENTICATION_APPLICATION_NAME}
# logging parameters
logging.level.root=${LOGGING_ROOT_LEVEL}
logging.level.taskio.microservices.authentication.api=${LOGGING_API_LEVEL}
# headers
request.auth-header-prefix=${AUTHENTICATION_HEADER_PREFIX}
email.verification.verification-code-length=${EMAIL_VERIFICATION_CODE_LENGTH}
# mongodb
spring.data.mongodb.host=${MONGO_HOST}
spring.data.mongodb.port=${MONGO_PORT}
spring.data.mongodb.authentication-database=${MONGO_AUTHENTICATION_DATABASE}
spring.data.mongodb.database=${MONGO_DATABASE}
spring.data.mongodb.username=${MONGO_USERNAME}
spring.data.mongodb.password=${MONGO_PASSWORD}
spring.data.mongodb.auto-index-creation=true
# redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
# jwt parameters
jwt.secret-key=${JWT_SECRET_KEY}
jwt.access-token-expire-time-ms=${JWT_ACCESS_TOKEN_EXPIRE_TIME_MS}
jwt.refresh-token-expire-time-ms=${JWT_REFRESH_TOKEN_EXPIRE_TIME_MS}
# rabbitmq
rabbitmq.exchanges.taskio-internal=${RABBITMQ_INTERNAL_EXCHANGE}
rabbitmq.routing-keys.internal-notification=${RABBITMQ_INTERNAL_NOTIFICATION_ROUTING_KEY}
# handle 404
server.error.whitelabel.enabled=false
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
